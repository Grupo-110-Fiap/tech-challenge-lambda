name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "Fiap-arch"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "Lambda"
  CONFIG_DIRECTORY: "./terraform"
  S3_BUCKET: "grupo-125-tech-challenge-lambda"

jobs:
  build-and-package:
    name: Build and Package Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        run: ./gradlew shadowJar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda-jar
          path: build/libs/lambda-tech-challenge.jar

  upload-to-s3:
    name: Upload JAR to S3
    runs-on: ubuntu-latest
    needs: build-and-package
    outputs:
      s3-key: ${{ steps.upload.outputs.s3-key }}
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-jar
          path: ./

      - name: Upload JAR to S3
        id: upload
        run: |
          S3_KEY="lambda-deployments/lambda-tech-challenge-${{ github.sha }}.jar"
          aws s3 cp lambda-tech-challenge.jar s3://${{ env.S3_BUCKET }}/$S3_KEY
          echo "s3-key=$S3_KEY" >> $GITHUB_OUTPUT
  

  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: [build-and-package, upload-to-s3]
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-jar
          path: build/libs/

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
        env:
          TF_VAR_lambda_s3_bucket: ${{ env.S3_BUCKET }}
          TF_VAR_lambda_s3_key: ${{ needs.upload-to-s3.outputs.s3-key }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"